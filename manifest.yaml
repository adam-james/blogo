apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: blogo-upvote-service
spec:
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: blogo-upvote-service
    spec:
      containers:
        - name: blogo-upvote-service
          image: blogoregistry.azurecr.io/blogo-upvote-service:latest
          resources:
            requests:
              cpu: 250m
            limits:
              cpu: 500m
          env:
            - name: NODE_ENV
              value: production
            - name: PORT
              value: "4000"
            - name: REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: blogo-secrets
                  key: redis-port
            - name: REDIS_HOST
              valueFrom:
                secretKeyRef:
                  name: blogo-secrets
                  key: redis-host
            - name: REDIS_KEY
              valueFrom:
                secretKeyRef:
                  name: blogo-secrets
                  key: redis-key
            - name: AMQP_URL
              valueFrom:
                secretKeyRef:
                  name: blogo-secrets
                  key: amqp-url
---
apiVersion: v1
kind: Service
metadata:
  name: upvote-service
spec:
  type: LoadBalancer
  ports:
    - port: 80
      protocol: TCP
      name: http
      targetPort: 4000
  selector:
    app: blogo-upvote-service
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: blogo-post-service
spec:
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: blogo-post-service
    spec:
      containers:
        - name: blogo-post-service
          image: blogoregistry.azurecr.io/blogo-post-service:latest
          resources:
            requests:
              cpu: 250m
            limits:
              cpu: 500m
          env:
            - name: NODE_ENV
              value: production
            - name: PORT
              value: "5000"
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: blogo-secrets
                  key: post-service-db-url
            - name: AMQP_URL
              valueFrom:
                secretKeyRef:
                  name: blogo-secrets
                  key: amqp-url
---
apiVersion: v1
kind: Service
metadata:
  name: post-service
spec:
  # TODO How to only expose this to the cluster?
  # Maybe use a DNS addon: https://kubernetes.io/docs/concepts/services-networking/service/#dns
  type: LoadBalancer
  ports:
    - port: 80
      protocol: TCP
      name: http
      targetPort: 5000
  selector:
    app: blogo-post-service
